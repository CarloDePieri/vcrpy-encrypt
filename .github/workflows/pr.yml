---
name: pr

on:

  pull_request:

  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"

jobs:

#  checks:
#    name: checks
#    runs-on: ubuntu-latest
#
#    steps:
#
#      - name: Checkout.
#        uses: actions/checkout@v3
#
#      - name: Ensure act has pipx executables in path.
#        if: ${{ env.ACT }}
#        run: |
#          echo "/root/.local/bin" >> $GITHUB_PATH
#
#      - name: Cache pipx dependencies.
#        uses: actions/cache@v2
#        with:
#          path: |
#            /opt/pipx_bin/poetry
#            /opt/pipx/venvs/poetry
#            /opt/pipx_bin/nox
#            /opt/pipx/venvs/nox
#            /opt/pipx/venvs/shared
#          key: pipx-poetry-nox-${{ hashFiles('**/poetry.lock') }}-0
#
#      - name: Install poetry and nox if needed.
#        run: |
#          if ! command -v poetry &> /dev/null
#          then
#            pipx install poetry
#          fi
#          if ! command -v nox &> /dev/null
#          then
#            pipx install nox
#          fi
#
#      - name: Install python 3.7, cache poetry packages.
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.7'
#
#      - name: Cache nox checks venv.
#        uses: actions/cache@v2
#        with:
#          path: .nox/checks
#          key: checks-${{ hashFiles('**/poetry.lock') }}-0
#
#      - name: Run all needed checks.
#        run: nox -s checks

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
#        python-version: [ '3.7', '3.8', '3.9', '3.10']
        python-version: [ '3.7']
    name: test(${{ matrix.python-version }})

    steps:

      - name: Checkout.
        uses: actions/checkout@v3

      - name: Ensure act has pipx executables in path.
        if: ${{ env.ACT }}
        run: |
          echo "/root/.local/bin" >> $GITHUB_PATH

      - name: Cache pipx dependencies.
        uses: actions/cache@v2
        with:
          path: |
            /opt/pipx_bin/poetry
            /opt/pipx/venvs/poetry
            /opt/pipx_bin/nox
            /opt/pipx/venvs/nox
            /opt/pipx/venvs/shared
          key: pipx-poetry-nox-${{ hashFiles('**/poetry.lock') }}-0

      - name: Install poetry and nox if needed.
        run: |
          if ! command -v poetry &> /dev/null
          then
            pipx install poetry
          fi
          if ! command -v nox &> /dev/null
          then
            pipx install nox
          fi

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Cache nox test venv.
        uses: actions/cache@v2
        with:
          path: .nox/test-matrix-${{ matrix.python-version }}
          key: checks-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}-3

      - name: Run the tests.
        run: |
          nox -s env.use -- ${{ matrix.python-version }}
          nox -s "tests.matrix(${{ matrix.python-version }})"
